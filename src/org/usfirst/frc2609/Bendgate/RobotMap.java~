// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2609.Bendgate;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.CounterBase.EncodingType; import edu.wpi.first.wpilibj.PIDSource.PIDSourceParameter;
import edu.wpi.first.wpilibj.can.*;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANJaguar robotDrivecanTalonLF;
    public static CANJaguar robotDrivecanTalonLR;
    public static CANJaguar robotDrivecanTalonRF;
    public static CANJaguar robotDrivecanTalonRR;
    public static RobotDrive robotDriverobotDrive;
    public static Encoder robotDriveencoderLeftDrive;
    public static Encoder robotDriveencoderRightDrive;
    public static Gyro robotDrivegyroOne;
    public static Encoder elevatorDriveencoderElevator;
    public static CANJaguar elevatorDrivecanTalonEL;
    public static CANJaguar elevatorDrivecanTalonER;
    public static DoubleSolenoid bottomGripperbottomGripperSolenoid;
    public static DoubleSolenoid topGrippertopGripperSolenoid;
    public static SpeedController rollerDriverollerLeft;
    public static SpeedController rollerDriverollerRight;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        robotDrivecanTalonLF = new CANJaguar(2);
        
        
        robotDrivecanTalonLR = new CANJaguar(3);
        
        
        robotDrivecanTalonRF = new CANJaguar(4);
        
        
        robotDrivecanTalonRR = new CANJaguar(5);
        
        
        robotDriverobotDrive = new RobotDrive(robotDrivecanTalonLF, robotDrivecanTalonLR,
              robotDrivecanTalonRF, robotDrivecanTalonRR);
        
        robotDriverobotDrive.setSafetyEnabled(true);
        robotDriverobotDrive.setExpiration(0.1);
        robotDriverobotDrive.setSensitivity(0.5);
        robotDriverobotDrive.setMaxOutput(1.0);

        robotDriverobotDrive.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        robotDriverobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        robotDriveencoderLeftDrive = new Encoder(0, 1, false, EncodingType.k4X);
        LiveWindow.addSensor("robotDrive", "encoderLeftDrive", robotDriveencoderLeftDrive);
        robotDriveencoderLeftDrive.setDistancePerPulse(1.0);
        robotDriveencoderLeftDrive.setPIDSourceParameter(PIDSourceParameter.kRate);
        robotDriveencoderRightDrive = new Encoder(2, 3, false, EncodingType.k4X);
        LiveWindow.addSensor("robotDrive", "encoderRightDrive", robotDriveencoderRightDrive);
        robotDriveencoderRightDrive.setDistancePerPulse(1.0);
        robotDriveencoderRightDrive.setPIDSourceParameter(PIDSourceParameter.kRate);
        robotDrivegyroOne = new Gyro(0);
        LiveWindow.addSensor("robotDrive", "gyroOne", robotDrivegyroOne);
        robotDrivegyroOne.setSensitivity(0.007);
        elevatorDriveencoderElevator = new Encoder(4, 5, false, EncodingType.k4X);
        LiveWindow.addSensor("elevatorDrive", "encoderElevator", elevatorDriveencoderElevator);
        elevatorDriveencoderElevator.setDistancePerPulse(1.0);
        elevatorDriveencoderElevator.setPIDSourceParameter(PIDSourceParameter.kRate);
        elevatorDrivecanTalonEL = new CANJaguar(6);
        
        
        elevatorDrivecanTalonER = new CANJaguar(7);
        
        
        bottomGripperbottomGripperSolenoid = new DoubleSolenoid(10, 0, 1);      
        LiveWindow.addActuator("bottomGripper", "bottomGripperSolenoid", bottomGripperbottomGripperSolenoid);
        
        topGrippertopGripperSolenoid = new DoubleSolenoid(10, 2, 3);      
        LiveWindow.addActuator("topGripper", "topGripperSolenoid", topGrippertopGripperSolenoid);
        
        rollerDriverollerLeft = new Talon(0);
        LiveWindow.addActuator("rollerDrive", "rollerLeft", (Talon) rollerDriverollerLeft);
        
        rollerDriverollerRight = new Talon(1);
        LiveWindow.addActuator("rollerDrive", "rollerRight", (Talon) rollerDriverollerRight);
        
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
